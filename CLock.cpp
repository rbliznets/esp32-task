/*!
	\file
	\brief Базовый класс для захвата ресурса задач FreeRTOS.
	\authors Близнец Р.А. (r.bliznets@gmail.com)
	\version 1.1.0.0
	\date 28.04.2020
*/
#include "CLock.h"

// Конструктор класса CLock.
// Инициализирует объект CLock. В данном случае конструктор пустой,
// так как предполагается, что мьютекс (mMutex) будет инициализирован
// в другом месте (например, в конструкторе производного класса или при создании объекта).
CLock::CLock()
{
}

// Метод lock() используется для блокировки доступа к общему ресурсу.
// Если мьютекс (mMutex) был успешно создан и не равен nullptr,
// то вызывается функция xSemaphoreTake(), которая блокирует мьютекс.
// Параметр portMAX_DELAY указывает на то, что задача будет ждать бесконечно долго,
// пока мьютекс не станет доступным.
void CLock::lock()
{
	if (mMutex != nullptr) // Проверяем, что мьютекс существует.
	{
		xSemaphoreTake(mMutex, portMAX_DELAY); // Захватываем мьютекс.
	}
}

// Метод unlock() используется для разблокировки доступа к общему ресурсу.
// Если мьютекс (mMutex) был успешно создан и не равен nullptr,
// то вызывается функция xSemaphoreGive(), которая освобождает мьютекс,
// позволяя другим задачам получить доступ к ресурсу.
void CLock::unlock()
{
	if (mMutex != nullptr) // Проверяем, что мьютекс существует.
	{
		xSemaphoreGive(mMutex); // Освобождаем мьютекс.
	}
}